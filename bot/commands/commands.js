const { getUserByTelegramId, userRegistration } = require('../http/userAPI');
const { generateMenu, geterateDataManagement,
    generateAdminMenu, generateAdminMenuClient, 
    generateAdminMenuWork,
    generateMaintenances} = require('../keyboard/generateKeyboard');
const { adminMenu, baristaMenu, courierMenu } = require('../action/index')
const { validatePhoneNumber, parseDate } = require('../validation/index')
const { addOrder, addProductToOrder, getOrderOne } = require('../http/orderAPI')
const { removeFromBasket } = require('../http/basketAPI')
const { infoOrganization, infoBot, addressCompany } = require('../const/info');
const { checkNameUser } = require('../action/user');

const startCommand = async (bot, msg, storage) => {
    const chatId = msg.chat.id;
    const telegramId = msg.from.id;
    
    try {
        let user = await getUserByTelegramId(telegramId);
        const menuKeyboard = await generateMenu(user.role, user.id);

        if (user === 404) {
            await userRegistration(`${msg.from.first_name} ${msg.from.last_name}`, telegramId, 'USER', new Date(), chatId, '–ù–µ —É–∫–∞–∑–∞–Ω');
            user = await getUserByTelegramId(telegramId);
            
            bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –í–∞—Å –≤ Flex Coffee, ${msg.from.first_name}! üòä
            \n–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ!\n–ì–æ—Ç–æ–≤—ã —Å–¥–µ–ª–∞—Ç—å –í–∞—à –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑? ü•ê‚òïÔ∏è`, {
                reply_markup: {
                    keyboard: menuKeyboard,
                    resize_keyboard: true,
                    one_time_keyboard: true
                }
            });
        } else if (user === 500) {
            bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        } else {
            bot.sendMessage(chatId, `–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${msg.from.first_name}! üòä‚òïÔ∏è`, {
                reply_markup: {
                    keyboard: menuKeyboard,
                    resize_keyboard: true,
                    one_time_keyboard: true
                }
            });
        }

        await getOrderOne(user.id).then((item) => storage.setListOrdersUser(item))
        setInterval(async () => {
            let listOrdersUserNew = [];
            await getOrderOne(user.id).then((item) => listOrdersUserNew = item)
            
            storage.listOrdersUser.forEach((order, index) => {
                if (order.status !== listOrdersUserNew[index].status) {
                    bot.sendMessage(chatId,
                        `–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ ${order.id}: ${order.status} -> ${listOrdersUserNew[index].status}
                        \n${parseDate(new Date())}
                        ${listOrdersUserNew[index].status === '–û–∂–∏–¥–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è' ? `\n${addressCompany()}` : ''}`);
                }
            });

            storage.setListOrdersUser(listOrdersUserNew);
        }, 5000);

        checkNameUser(msg, user);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start:', error);
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
}

const choiceMenu = async (bot, msg, storage = null) => {
    const chatId = msg.chat.id;
    const telegramId = msg.from.id;
    const text = msg.text;

    try {
        const user = await getUserByTelegramId(telegramId);
        const menuKeyboard = await generateMenu(user.role, user.id);

        if (text === '–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üë®‚Äçüíº' && user.role === 'ADMIN') {
            adminMenu(bot, msg);
        } else if (text === '–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üë®‚Äçüíº') {
            bot.sendMessage(chatId, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üò¢');
        }

        if (text === '–î–ª—è –±–∞—Ä–∏—Å—Ç–∞ ‚òï' && user.role === 'BARISTA') {
            baristaMenu(bot, msg, user.id);
        } else if (text === '–î–ª—è –±–∞—Ä–∏—Å—Ç–∞ ‚òï') {
            bot.sendMessage(chatId, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –±–∞—Ä–∏—Å—Ç–∞ üò¢');
        }

        if (text === '–î–ª—è –∫—É—Ä—å–µ—Ä–∞ üõµ' && user.role === 'COURIER') {
            courierMenu(bot, msg, user.id);
        } else if (text === '–î–ª—è –∫—É—Ä—å–µ—Ä–∞ üõµ') {
            bot.sendMessage(chatId, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –∫—É—Ä—å–µ—Ä–∞ üò¢');
        }

        if (text === '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ üòÑ' && user.role === 'ADMIN') {
            const menuKeyboard = await generateAdminMenuClient(user.id)
            bot.sendMessage(msg.chat.id, `–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏`, {
                reply_markup: {
                    keyboard: menuKeyboard,
                    resize_keyboard: true,
                    one_time_keyboard: true
                }
            });
        } else if (text === '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ üòÑ') {
            bot.sendMessage(chatId, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üò¢');
        }

        if (text === '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏ üë∑‚Äç‚ôÇÔ∏è' && user.role === 'ADMIN') {
            const menuKeyboard = await generateAdminMenuWork(user.id)
            bot.sendMessage(msg.chat.id, `–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏`, {
                reply_markup: {
                    keyboard: menuKeyboard,
                    resize_keyboard: true,
                    one_time_keyboard: true
                }
            });
        } else if (text === '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏ üë∑‚Äç‚ôÇÔ∏è') {
            bot.sendMessage(chatId, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üò¢');
        }

        if (text === '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–æ—Ç–∞ üëæ' && user.role === 'ADMIN') {
            const menuKeyboard = await generateMaintenances()
            bot.sendMessage(msg.chat.id, `–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–æ—Ç–∞`, {
                reply_markup: {
                    keyboard: menuKeyboard,
                    resize_keyboard: true,
                    one_time_keyboard: true
                }
            });
        } else if (text === '–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–æ—Ç–∞ üëæ') {
            bot.sendMessage(chatId, '–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üò¢');
        }

        if (text === '–û—Ç–º–µ–Ω–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞' || text === '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') {
            const menuKeyboard = await generateMenu(user.role, user.id);
            bot.sendMessage(msg.chat.id, `–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é Flex Coffee`, {
                reply_markup: {
                    keyboard: menuKeyboard,
                    resize_keyboard: true,
                    one_time_keyboard: true
                }
            });
        }

        if (text === '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' && user.role === 'ADMIN') {
            const menuKeyboard = await generateAdminMenu();
            bot.sendMessage(msg.chat.id, `–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞`, {
                reply_markup: {
                    keyboard: menuKeyboard,
                    resize_keyboard: true,
                    one_time_keyboard: true
                }
            });
        }

        if (text === '–°–±–µ—Ä–±–∞–Ω–∫' || text === '–¢–∏–Ω—å–∫–æ—Ñ—Ñ' || text === '–ê–ª—å—Ñ–∞-–±–∞–Ω–∫' ) {
            storage.setLastBotMessage('–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–≤—è–∑–∞–Ω –±–∞–Ω–∫ üíµ');
            storage.setBank(text)
            bot.sendMessage(msg.chat.id, storage.lastBotMessage);
        } else {
            if (storage.lastBotMessage === '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–≤—è–∑–∞–Ω –±–∞–Ω–∫ üíµ') {
                if (validatePhoneNumber(text)) {
                    storage.setPhonePayment(text)

                    // –¥–µ–ª–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î –æ –∑–∞–∫–∞–∑–µ //
                    const order = await addOrder(user.id, new Date(), '–û—Ñ–æ—Ä–º–ª–µ–Ω', storage.productOrder.delivery, storage.bank, storage.phonePayment)

                    // –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –∑–∞–∫–∞–∑–∞ –≤ –ë–î //
                    for (const item of storage.productOrder.products) {
                        await addProductToOrder(order.id, item.id, item.price)
                    }

                    // —É–¥–∞–ª—è–µ–º –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã //  
                    for (const item of storage.productOrder.products) {
                        await removeFromBasket(user.id, item.id)
                    }

                    // –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–∫—É–ø–∫—É //
                    bot.sendMessage(msg.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ ‚òïÔ∏èüòä\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –í—ã –º–æ–∂–µ—Ç–µ –≤ –º–µ–Ω—é "–ú–æ–∏ –∑–∞–∫–∞–∑—ã"', {
                        reply_markup: {
                            keyboard: menuKeyboard,
                            resize_keyboard: true,
                            one_time_keyboard: true
                        }
                    });
                    storage.setLastBotMessage('')
                } else {
                    // –ø—Ä–æ—Å–∏–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å //
                    bot.sendMessage(msg.chat.id, `–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:(\n${storage.lastBotMessage}`);
                }
            }
        }

        if (text === '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ üè¢') {
            bot.sendMessage(msg.chat.id, infoOrganization(), {
                reply_markup: {
                    keyboard: menuKeyboard,
                    resize_keyboard: true,
                    one_time_keyboard: true
                }
            });
        }

        if (text === '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ ü§ñ') {
            bot.sendMessage(msg.chat.id, infoBot(), {
                reply_markup: {
                    keyboard: menuKeyboard,
                    resize_keyboard: true,
                    one_time_keyboard: true
                }
            });
        }

        if (text === '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ üõ¢Ô∏è' && user.role === 'ADMIN') {
            const menuKeyboard = await geterateDataManagement(user.id);
            bot.sendMessage(msg.chat.id, `–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏`, {
                reply_markup: {
                    keyboard: menuKeyboard,
                    resize_keyboard: true,
                    one_time_keyboard: true
                }
            });
        }

    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é ${text}`, error);
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
}

module.exports = {
    startCommand,
    choiceMenu,
};
